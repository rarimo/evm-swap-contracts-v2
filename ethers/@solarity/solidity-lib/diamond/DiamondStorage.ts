/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export interface DiamondStorageInterface extends utils.Interface {
  functions: {
    "DIAMOND_STORAGE_SLOT()": FunctionFragment;
    "getFacetBySelector(bytes4)": FunctionFragment;
    "getFacetSelectors(address)": FunctionFragment;
    "getFacets()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "DIAMOND_STORAGE_SLOT"
      | "DIAMOND_STORAGE_SLOT()"
      | "getFacetBySelector"
      | "getFacetBySelector(bytes4)"
      | "getFacetSelectors"
      | "getFacetSelectors(address)"
      | "getFacets"
      | "getFacets()"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "DIAMOND_STORAGE_SLOT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DIAMOND_STORAGE_SLOT()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetBySelector",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetBySelector(bytes4)",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetSelectors",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetSelectors(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(functionFragment: "getFacets", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getFacets()",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "DIAMOND_STORAGE_SLOT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DIAMOND_STORAGE_SLOT()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetBySelector",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetBySelector(bytes4)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetSelectors",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetSelectors(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getFacets", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getFacets()",
    data: BytesLike
  ): Result;

  events: {};
}

export interface DiamondStorage extends BaseContract {
  contractName: "DiamondStorage";

  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: DiamondStorageInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    DIAMOND_STORAGE_SLOT(overrides?: CallOverrides): Promise<[string]>;

    "DIAMOND_STORAGE_SLOT()"(overrides?: CallOverrides): Promise<[string]>;

    getFacetBySelector(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string] & { facet_: string }>;

    "getFacetBySelector(bytes4)"(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string] & { facet_: string }>;

    getFacetSelectors(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string[]] & { selectors_: string[] }>;

    "getFacetSelectors(address)"(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string[]] & { selectors_: string[] }>;

    getFacets(
      overrides?: CallOverrides
    ): Promise<[string[]] & { facets_: string[] }>;

    "getFacets()"(
      overrides?: CallOverrides
    ): Promise<[string[]] & { facets_: string[] }>;
  };

  DIAMOND_STORAGE_SLOT(overrides?: CallOverrides): Promise<string>;

  "DIAMOND_STORAGE_SLOT()"(overrides?: CallOverrides): Promise<string>;

  getFacetBySelector(
    selector_: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getFacetBySelector(bytes4)"(
    selector_: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  getFacetSelectors(
    facet_: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "getFacetSelectors(address)"(
    facet_: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getFacets(overrides?: CallOverrides): Promise<string[]>;

  "getFacets()"(overrides?: CallOverrides): Promise<string[]>;

  callStatic: {
    DIAMOND_STORAGE_SLOT(overrides?: CallOverrides): Promise<string>;

    "DIAMOND_STORAGE_SLOT()"(overrides?: CallOverrides): Promise<string>;

    getFacetBySelector(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getFacetBySelector(bytes4)"(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    getFacetSelectors(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getFacetSelectors(address)"(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getFacets(overrides?: CallOverrides): Promise<string[]>;

    "getFacets()"(overrides?: CallOverrides): Promise<string[]>;
  };

  filters: {};

  estimateGas: {
    DIAMOND_STORAGE_SLOT(overrides?: CallOverrides): Promise<BigNumber>;

    "DIAMOND_STORAGE_SLOT()"(overrides?: CallOverrides): Promise<BigNumber>;

    getFacetBySelector(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFacetBySelector(bytes4)"(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacetSelectors(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFacetSelectors(address)"(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacets(overrides?: CallOverrides): Promise<BigNumber>;

    "getFacets()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    DIAMOND_STORAGE_SLOT(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "DIAMOND_STORAGE_SLOT()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacetBySelector(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFacetBySelector(bytes4)"(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacetSelectors(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFacetSelectors(address)"(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacets(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getFacets()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
