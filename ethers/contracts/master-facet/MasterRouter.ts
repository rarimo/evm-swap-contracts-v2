/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export declare namespace MasterRouter {
  export type PayloadStruct = {
    command: PromiseOrValue<BigNumberish>;
    skipRevert: PromiseOrValue<boolean>;
    data: PromiseOrValue<BytesLike>;
  };

  export type PayloadStructOutput = [BigNumber, boolean, string] & {
    command: BigNumber;
    skipRevert: boolean;
    data: string;
  };
}

export interface MasterRouterInterface extends utils.Interface {
  functions: {
    "DIAMOND_STORAGE_SLOT()": FunctionFragment;
    "MASTER_ROUTER_STORAGE_SLOT()": FunctionFragment;
    "SWAP_DIAMOND_STORAGE_SLOT()": FunctionFragment;
    "getCallerAddress()": FunctionFragment;
    "getFacetBySelector(bytes4)": FunctionFragment;
    "getFacetSelectors(address)": FunctionFragment;
    "getFacets()": FunctionFragment;
    "getSelectorType(bytes4)": FunctionFragment;
    "make((uint256,bool,bytes)[])": FunctionFragment;
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": FunctionFragment;
    "onERC1155Received(address,address,uint256,uint256,bytes)": FunctionFragment;
    "onERC721Received(address,address,uint256,bytes)": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "DIAMOND_STORAGE_SLOT"
      | "DIAMOND_STORAGE_SLOT()"
      | "MASTER_ROUTER_STORAGE_SLOT"
      | "MASTER_ROUTER_STORAGE_SLOT()"
      | "SWAP_DIAMOND_STORAGE_SLOT"
      | "SWAP_DIAMOND_STORAGE_SLOT()"
      | "getCallerAddress"
      | "getCallerAddress()"
      | "getFacetBySelector"
      | "getFacetBySelector(bytes4)"
      | "getFacetSelectors"
      | "getFacetSelectors(address)"
      | "getFacets"
      | "getFacets()"
      | "getSelectorType"
      | "getSelectorType(bytes4)"
      | "make"
      | "make((uint256,bool,bytes)[])"
      | "onERC1155BatchReceived"
      | "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
      | "onERC1155Received"
      | "onERC1155Received(address,address,uint256,uint256,bytes)"
      | "onERC721Received"
      | "onERC721Received(address,address,uint256,bytes)"
      | "supportsInterface"
      | "supportsInterface(bytes4)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "DIAMOND_STORAGE_SLOT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DIAMOND_STORAGE_SLOT()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MASTER_ROUTER_STORAGE_SLOT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MASTER_ROUTER_STORAGE_SLOT()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SWAP_DIAMOND_STORAGE_SLOT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SWAP_DIAMOND_STORAGE_SLOT()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCallerAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCallerAddress()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetBySelector",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetBySelector(bytes4)",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetSelectors",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetSelectors(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(functionFragment: "getFacets", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getFacets()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSelectorType",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "getSelectorType(bytes4)",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "make",
    values: [MasterRouter.PayloadStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "make((uint256,bool,bytes)[])",
    values: [MasterRouter.PayloadStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155BatchReceived",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155Received",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155Received(address,address,uint256,uint256,bytes)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC721Received",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC721Received(address,address,uint256,bytes)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface(bytes4)",
    values: [PromiseOrValue<BytesLike>]
  ): string;

  decodeFunctionResult(
    functionFragment: "DIAMOND_STORAGE_SLOT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DIAMOND_STORAGE_SLOT()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MASTER_ROUTER_STORAGE_SLOT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MASTER_ROUTER_STORAGE_SLOT()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SWAP_DIAMOND_STORAGE_SLOT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SWAP_DIAMOND_STORAGE_SLOT()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCallerAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCallerAddress()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetBySelector",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetBySelector(bytes4)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetSelectors",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetSelectors(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getFacets", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getFacets()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSelectorType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSelectorType(bytes4)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "make", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "make((uint256,bool,bytes)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155BatchReceived",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155Received(address,address,uint256,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Received(address,address,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface(bytes4)",
    data: BytesLike
  ): Result;

  events: {};
}

export interface MasterRouter extends BaseContract {
  contractName: "MasterRouter";

  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MasterRouterInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    DIAMOND_STORAGE_SLOT(overrides?: CallOverrides): Promise<[string]>;

    "DIAMOND_STORAGE_SLOT()"(overrides?: CallOverrides): Promise<[string]>;

    MASTER_ROUTER_STORAGE_SLOT(overrides?: CallOverrides): Promise<[string]>;

    "MASTER_ROUTER_STORAGE_SLOT()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    SWAP_DIAMOND_STORAGE_SLOT(overrides?: CallOverrides): Promise<[string]>;

    "SWAP_DIAMOND_STORAGE_SLOT()"(overrides?: CallOverrides): Promise<[string]>;

    getCallerAddress(
      overrides?: CallOverrides
    ): Promise<[string] & { caller_: string }>;

    "getCallerAddress()"(
      overrides?: CallOverrides
    ): Promise<[string] & { caller_: string }>;

    getFacetBySelector(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string] & { facet_: string }>;

    "getFacetBySelector(bytes4)"(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string] & { facet_: string }>;

    getFacetSelectors(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string[]] & { selectors_: string[] }>;

    "getFacetSelectors(address)"(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string[]] & { selectors_: string[] }>;

    getFacets(
      overrides?: CallOverrides
    ): Promise<[string[]] & { facets_: string[] }>;

    "getFacets()"(
      overrides?: CallOverrides
    ): Promise<[string[]] & { facets_: string[] }>;

    getSelectorType(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[number] & { selectorType_: number }>;

    "getSelectorType(bytes4)"(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[number] & { selectorType_: number }>;

    make(
      payloads_: MasterRouter.PayloadStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "make((uint256,bool,bytes)[])"(
      payloads_: MasterRouter.PayloadStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    onERC1155BatchReceived(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>[],
      arg3: PromiseOrValue<BigNumberish>[],
      arg4: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>[],
      arg3: PromiseOrValue<BigNumberish>[],
      arg4: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    onERC1155Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BigNumberish>,
      arg4: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BigNumberish>,
      arg4: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    onERC721Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "supportsInterface(bytes4)"(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  DIAMOND_STORAGE_SLOT(overrides?: CallOverrides): Promise<string>;

  "DIAMOND_STORAGE_SLOT()"(overrides?: CallOverrides): Promise<string>;

  MASTER_ROUTER_STORAGE_SLOT(overrides?: CallOverrides): Promise<string>;

  "MASTER_ROUTER_STORAGE_SLOT()"(overrides?: CallOverrides): Promise<string>;

  SWAP_DIAMOND_STORAGE_SLOT(overrides?: CallOverrides): Promise<string>;

  "SWAP_DIAMOND_STORAGE_SLOT()"(overrides?: CallOverrides): Promise<string>;

  getCallerAddress(overrides?: CallOverrides): Promise<string>;

  "getCallerAddress()"(overrides?: CallOverrides): Promise<string>;

  getFacetBySelector(
    selector_: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getFacetBySelector(bytes4)"(
    selector_: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  getFacetSelectors(
    facet_: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "getFacetSelectors(address)"(
    facet_: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getFacets(overrides?: CallOverrides): Promise<string[]>;

  "getFacets()"(overrides?: CallOverrides): Promise<string[]>;

  getSelectorType(
    selector_: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<number>;

  "getSelectorType(bytes4)"(
    selector_: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<number>;

  make(
    payloads_: MasterRouter.PayloadStruct[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "make((uint256,bool,bytes)[])"(
    payloads_: MasterRouter.PayloadStruct[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  onERC1155BatchReceived(
    arg0: PromiseOrValue<string>,
    arg1: PromiseOrValue<string>,
    arg2: PromiseOrValue<BigNumberish>[],
    arg3: PromiseOrValue<BigNumberish>[],
    arg4: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
    arg0: PromiseOrValue<string>,
    arg1: PromiseOrValue<string>,
    arg2: PromiseOrValue<BigNumberish>[],
    arg3: PromiseOrValue<BigNumberish>[],
    arg4: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  onERC1155Received(
    arg0: PromiseOrValue<string>,
    arg1: PromiseOrValue<string>,
    arg2: PromiseOrValue<BigNumberish>,
    arg3: PromiseOrValue<BigNumberish>,
    arg4: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "onERC1155Received(address,address,uint256,uint256,bytes)"(
    arg0: PromiseOrValue<string>,
    arg1: PromiseOrValue<string>,
    arg2: PromiseOrValue<BigNumberish>,
    arg3: PromiseOrValue<BigNumberish>,
    arg4: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  onERC721Received(
    arg0: PromiseOrValue<string>,
    arg1: PromiseOrValue<string>,
    arg2: PromiseOrValue<BigNumberish>,
    arg3: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "onERC721Received(address,address,uint256,bytes)"(
    arg0: PromiseOrValue<string>,
    arg1: PromiseOrValue<string>,
    arg2: PromiseOrValue<BigNumberish>,
    arg3: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    interfaceId: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    DIAMOND_STORAGE_SLOT(overrides?: CallOverrides): Promise<string>;

    "DIAMOND_STORAGE_SLOT()"(overrides?: CallOverrides): Promise<string>;

    MASTER_ROUTER_STORAGE_SLOT(overrides?: CallOverrides): Promise<string>;

    "MASTER_ROUTER_STORAGE_SLOT()"(overrides?: CallOverrides): Promise<string>;

    SWAP_DIAMOND_STORAGE_SLOT(overrides?: CallOverrides): Promise<string>;

    "SWAP_DIAMOND_STORAGE_SLOT()"(overrides?: CallOverrides): Promise<string>;

    getCallerAddress(overrides?: CallOverrides): Promise<string>;

    "getCallerAddress()"(overrides?: CallOverrides): Promise<string>;

    getFacetBySelector(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getFacetBySelector(bytes4)"(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    getFacetSelectors(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getFacetSelectors(address)"(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getFacets(overrides?: CallOverrides): Promise<string[]>;

    "getFacets()"(overrides?: CallOverrides): Promise<string[]>;

    getSelectorType(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<number>;

    "getSelectorType(bytes4)"(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<number>;

    make(
      payloads_: MasterRouter.PayloadStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    "make((uint256,bool,bytes)[])"(
      payloads_: MasterRouter.PayloadStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    onERC1155BatchReceived(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>[],
      arg3: PromiseOrValue<BigNumberish>[],
      arg4: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>[],
      arg3: PromiseOrValue<BigNumberish>[],
      arg4: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    onERC1155Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BigNumberish>,
      arg4: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BigNumberish>,
      arg4: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    onERC721Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    DIAMOND_STORAGE_SLOT(overrides?: CallOverrides): Promise<BigNumber>;

    "DIAMOND_STORAGE_SLOT()"(overrides?: CallOverrides): Promise<BigNumber>;

    MASTER_ROUTER_STORAGE_SLOT(overrides?: CallOverrides): Promise<BigNumber>;

    "MASTER_ROUTER_STORAGE_SLOT()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    SWAP_DIAMOND_STORAGE_SLOT(overrides?: CallOverrides): Promise<BigNumber>;

    "SWAP_DIAMOND_STORAGE_SLOT()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCallerAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "getCallerAddress()"(overrides?: CallOverrides): Promise<BigNumber>;

    getFacetBySelector(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFacetBySelector(bytes4)"(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacetSelectors(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFacetSelectors(address)"(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacets(overrides?: CallOverrides): Promise<BigNumber>;

    "getFacets()"(overrides?: CallOverrides): Promise<BigNumber>;

    getSelectorType(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getSelectorType(bytes4)"(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    make(
      payloads_: MasterRouter.PayloadStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "make((uint256,bool,bytes)[])"(
      payloads_: MasterRouter.PayloadStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    onERC1155BatchReceived(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>[],
      arg3: PromiseOrValue<BigNumberish>[],
      arg4: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>[],
      arg3: PromiseOrValue<BigNumberish>[],
      arg4: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    onERC1155Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BigNumberish>,
      arg4: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BigNumberish>,
      arg4: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    onERC721Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DIAMOND_STORAGE_SLOT(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "DIAMOND_STORAGE_SLOT()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MASTER_ROUTER_STORAGE_SLOT(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "MASTER_ROUTER_STORAGE_SLOT()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    SWAP_DIAMOND_STORAGE_SLOT(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "SWAP_DIAMOND_STORAGE_SLOT()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCallerAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getCallerAddress()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacetBySelector(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFacetBySelector(bytes4)"(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacetSelectors(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFacetSelectors(address)"(
      facet_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacets(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getFacets()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getSelectorType(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getSelectorType(bytes4)"(
      selector_: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    make(
      payloads_: MasterRouter.PayloadStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "make((uint256,bool,bytes)[])"(
      payloads_: MasterRouter.PayloadStruct[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    onERC1155BatchReceived(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>[],
      arg3: PromiseOrValue<BigNumberish>[],
      arg4: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>[],
      arg3: PromiseOrValue<BigNumberish>[],
      arg4: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    onERC1155Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BigNumberish>,
      arg4: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BigNumberish>,
      arg4: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    onERC721Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "supportsInterface(bytes4)"(
      interfaceId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
