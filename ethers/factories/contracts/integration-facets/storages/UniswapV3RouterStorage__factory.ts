/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  UniswapV3RouterStorage,
  UniswapV3RouterStorageInterface,
} from "../../../../contracts/integration-facets/storages/UniswapV3RouterStorage";

const _abi = [
  {
    inputs: [],
    name: "UNISWAP_V3_ROUTER_STORAGE_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapV3Router",
    outputs: [
      {
        internalType: "address",
        name: "swapV3Router_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060df8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806361d2945e146037578063e47a7515146070575b600080fd5b605d7fb06b901cf30d9e865c5d7b26a442944f8bd0a60b67dd8dda8d1699157a5f493e81565b6040519081526020015b60405180910390f35b7fb06b901cf30d9e865c5d7b26a442944f8bd0a60b67dd8dda8d1699157a5f493e546040516001600160a01b039091168152602001606756fea2646970667358221220ec1c0d5221b15e6d9eb6ca0ab0cae931fcfa8abb6bd26c1f81196c0f7bd2431264736f6c63430008090033";

type UniswapV3RouterStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3RouterStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3RouterStorage__factory extends ContractFactory {
  constructor(...args: UniswapV3RouterStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV3RouterStorage";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3RouterStorage> {
    return super.deploy(overrides || {}) as Promise<UniswapV3RouterStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UniswapV3RouterStorage {
    return super.attach(address) as UniswapV3RouterStorage;
  }
  override connect(signer: Signer): UniswapV3RouterStorage__factory {
    return super.connect(signer) as UniswapV3RouterStorage__factory;
  }
  static readonly contractName: "UniswapV3RouterStorage";

  public readonly contractName: "UniswapV3RouterStorage";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3RouterStorageInterface {
    return new utils.Interface(_abi) as UniswapV3RouterStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3RouterStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapV3RouterStorage;
  }
}
