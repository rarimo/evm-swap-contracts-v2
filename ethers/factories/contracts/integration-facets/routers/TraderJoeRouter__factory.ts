/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TraderJoeRouter,
  TraderJoeRouterInterface,
} from "../../../../contracts/integration-facets/routers/TraderJoeRouter";

const _abi = [
  {
    inputs: [],
    name: "OWNABLE_DIAMOND_STORAGE_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TRADER_JOE_ROUTER_STORAGE_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTraderJoeRouter",
    outputs: [
      {
        internalType: "address",
        name: "traderJoeRouter_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "traderJoeRouter_",
        type: "address",
      },
    ],
    name: "setTraderJoeRouterAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax_",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path_",
        type: "address[]",
      },
    ],
    name: "swapAVAXForExactTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin_",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path_",
        type: "address[]",
      },
    ],
    name: "swapExactAVAXForTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin_",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path_",
        type: "address[]",
      },
    ],
    name: "swapExactTokensForAVAX",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin_",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path_",
        type: "address[]",
      },
    ],
    name: "swapExactTokensForTokensTJ",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax_",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path_",
        type: "address[]",
      },
    ],
    name: "swapTokensForExactAVAX",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax_",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path_",
        type: "address[]",
      },
    ],
    name: "swapTokensForExactTokensTJ",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610af5806100206000396000f3fe60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b1461015d5780639b1d014e14610172578063d00dac7c14610185578063e3e077ad14610198578063e691b80a146101cc578063e8a30798146101df57600080fd5b806323a012f0146100a15780633a144e2d146100b65780634cc64fc4146100e8578063519c1647146101085780637d35e2081461011b575b600080fd5b6100b46100af366004610802565b6101f2565b005b3480156100c257600080fd5b506100cb6102a7565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f457600080fd5b506100b461010336600461089b565b6102da565b6100b4610116366004610802565b610397565b34801561012757600080fd5b5061014f7fc11be187cd5660797a6158ae4076db56a270a2c7b6f669e7c58a47d52a8b8f3381565b6040519081526020016100df565b34801561016957600080fd5b506100cb6103cd565b6100b4610180366004610802565b6103f5565b6100b4610193366004610802565b6104ec565b3480156101a457600080fd5b5061014f7f57c74130ec72d1a7d7ef7def56151cb9c46dfc5ebcd11c0ed0e3be53656c9a6581565b6100b46101da366004610802565b61053e565b6100b46101ed366004610802565b610590565b6101fc82826105e2565b6102046102a7565b6001600160a01b0316638a657e67848685856102288b6001600160a01b0316610637565b426040518763ffffffff1660e01b8152600401610249959493929190610908565b6000604051808303818588803b15801561026257600080fd5b505af1158015610276573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261029f9190810190610955565b505050505050565b60007fc11be187cd5660797a6158ae4076db56a270a2c7b6f669e7c58a47d52a8b8f335b546001600160a01b0316919050565b60006102e46103cd565b90506001600160a01b038116158061030457506001600160a01b03811633145b6103555760405162461bcd60e51b815260206004820152601760248201527f4f4453746f726167653a206e6f7420616e206f776e657200000000000000000060448201526064015b60405180910390fd5b507fc11be187cd5660797a6158ae4076db56a270a2c7b6f669e7c58a47d52a8b8f3380546001600160a01b0319166001600160a01b0392909216919091179055565b6103a182826105e2565b6103a96102a7565b6001600160a01b031663a2a1623d858585856102288b6001600160a01b0316610637565b60007f57c74130ec72d1a7d7ef7def56151cb9c46dfc5ebcd11c0ed0e3be53656c9a656102cb565b6103ff82826105e2565b60006104096102a7565b9050610446818484600081811061042257610422610a13565b9050602002016020810190610437919061089b565b6001600160a01b0316906106df565b806001600160a01b0316638803dbee8686868661046b8c6001600160a01b0316610637565b426040518763ffffffff1660e01b815260040161048d96959493929190610a29565b600060405180830381600087803b1580156104a757600080fd5b505af11580156104bb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104e39190810190610955565b50505050505050565b6104f682826105e2565b60006105006102a7565b9050610519818484600081811061042257610422610a13565b806001600160a01b031663676528d18686868661046b8c6001600160a01b0316610637565b61054882826105e2565b60006105526102a7565b905061056b818484600081811061042257610422610a13565b806001600160a01b03166338ed17398686868661046b8c6001600160a01b0316610637565b61059a82826105e2565b60006105a46102a7565b90506105bd818484600081811061042257610422610a13565b806001600160a01b0316637a42416a8686868661046b8c6001600160a01b0316610637565b60028110156106335760405162461bcd60e51b815260206004820152601d60248201527f5472616465724a6f65526f757465723a20696e76616c69642070617468000000604482015260640161034c565b5050565b60006001600160a01b03821660011415610652575030919050565b6001600160a01b038216600214156106db57306001600160a01b03166346b3353b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561069d57600080fd5b505afa1580156106b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d59190610a67565b92915050565b5090565b604051636eb1769f60e11b81523060048201526001600160a01b03828116602483015283169063dd62ed3e9060440160206040518083038186803b15801561072657600080fd5b505afa15801561073a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075e9190610a84565b6106335760405163095ea7b360e01b81526001600160a01b038281166004830152600019602483015283169063095ea7b390604401602060405180830381600087803b1580156107ad57600080fd5b505af11580156107c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e59190610a9d565b505050565b6001600160a01b03811681146107ff57600080fd5b50565b60008060008060006080868803121561081a57600080fd5b8535610825816107ea565b94506020860135935060408601359250606086013567ffffffffffffffff8082111561085057600080fd5b818801915088601f83011261086457600080fd5b81358181111561087357600080fd5b8960208260051b850101111561088857600080fd5b9699959850939650602001949392505050565b6000602082840312156108ad57600080fd5b81356108b8816107ea565b9392505050565b8183526000602080850194508260005b858110156108fd5781356108e2816107ea565b6001600160a01b0316875295820195908201906001016108cf565b509495945050505050565b8581526080602082015260006109226080830186886108bf565b6001600160a01b0394909416604083015250606001529392505050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561096857600080fd5b825167ffffffffffffffff8082111561098057600080fd5b818501915085601f83011261099457600080fd5b8151818111156109a6576109a661093f565b8060051b604051601f19603f830116810181811085821117156109cb576109cb61093f565b6040529182528482019250838101850191888311156109e957600080fd5b938501935b82851015610a07578451845293850193928501926109ee565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b86815285602082015260a060408201526000610a4960a0830186886108bf565b6001600160a01b039490941660608301525060800152949350505050565b600060208284031215610a7957600080fd5b81516108b8816107ea565b600060208284031215610a9657600080fd5b5051919050565b600060208284031215610aaf57600080fd5b815180151581146108b857600080fdfea26469706673582212205a5e98684aa707d02cbd0f115c167ca58a43e00c76e6fa984f0c03e6d36b9dad64736f6c63430008090033";

type TraderJoeRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TraderJoeRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TraderJoeRouter__factory extends ContractFactory {
  constructor(...args: TraderJoeRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TraderJoeRouter";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TraderJoeRouter> {
    return super.deploy(overrides || {}) as Promise<TraderJoeRouter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TraderJoeRouter {
    return super.attach(address) as TraderJoeRouter;
  }
  override connect(signer: Signer): TraderJoeRouter__factory {
    return super.connect(signer) as TraderJoeRouter__factory;
  }
  static readonly contractName: "TraderJoeRouter";

  public readonly contractName: "TraderJoeRouter";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TraderJoeRouterInterface {
    return new utils.Interface(_abi) as TraderJoeRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TraderJoeRouter {
    return new Contract(address, _abi, signerOrProvider) as TraderJoeRouter;
  }
}
