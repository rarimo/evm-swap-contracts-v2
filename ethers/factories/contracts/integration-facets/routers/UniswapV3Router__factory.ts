/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  UniswapV3Router,
  UniswapV3RouterInterface,
} from "../../../../contracts/integration-facets/routers/UniswapV3Router";

const _abi = [
  {
    inputs: [],
    name: "OWNABLE_DIAMOND_STORAGE_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNISWAP_V3_ROUTER_STORAGE_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isNative_",
        type: "bool",
      },
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMinimum_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "path_",
        type: "bytes",
      },
    ],
    name: "exactInput",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isNative_",
        type: "bool",
      },
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMaximum_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "path_",
        type: "bytes",
      },
    ],
    name: "exactOutput",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapV3Router",
    outputs: [
      {
        internalType: "address",
        name: "swapV3Router_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "swapV3Router_",
        type: "address",
      },
    ],
    name: "setUniswapV3RouterAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a8d806100206000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100e4578063a22e091c14610111578063e3e077ad14610131578063e47a75151461016557600080fd5b8063272bf5591461007557806361d2945e1461008a578063654833e7146100d1575b600080fd5b610088610083366004610875565b61017a565b005b34801561009657600080fd5b506100be7fb06b901cf30d9e865c5d7b26a442944f8bd0a60b67dd8dda8d1699157a5f493e81565b6040519081526020015b60405180910390f35b6100886100df366004610875565b6102b4565b3480156100f057600080fd5b506100f9610447565b6040516001600160a01b0390911681526020016100c8565b34801561011d57600080fd5b5061008861012c36600461091f565b61047a565b34801561013d57600080fd5b506100be7f57c74130ec72d1a7d7ef7def56151cb9c46dfc5ebcd11c0ed0e3be53656c9a6581565b34801561017157600080fd5b506100f9610537565b6000610184610537565b9050866101a8576101a881610199858561055f565b6001600160a01b0316906105f7565b806001600160a01b031663c04b8d59886101c35760006101c5565b865b6040518060a0016040528087878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060200161021e6001600160a01b038c16610703565b6001600160a01b03168152602001428152602001898152602001888152506040518363ffffffff1660e01b815260040161025891906109cc565b6020604051808303818588803b15801561027157600080fd5b505af1158015610285573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906102aa91906109df565b5050505050505050565b60006102be610537565b9050866102d3576102d38161019985856107ab565b6000816001600160a01b031663f28c0498896102f05760006102f2565b865b6040518060a0016040528088888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060200161034b6001600160a01b038d16610703565b6001600160a01b031681526020014281526020018a8152602001898152506040518363ffffffff1660e01b815260040161038591906109cc565b6020604051808303818588803b15801561039e57600080fd5b505af11580156103b2573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906103d791906109df565b90508780156103e557508085115b156102aa57816001600160a01b03166312210e8a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561042557600080fd5b505af1158015610439573d6000803e3d6000fd5b505050505050505050505050565b60007f57c74130ec72d1a7d7ef7def56151cb9c46dfc5ebcd11c0ed0e3be53656c9a655b546001600160a01b0316919050565b6000610484610447565b90506001600160a01b03811615806104a457506001600160a01b03811633145b6104f55760405162461bcd60e51b815260206004820152601760248201527f4f4453746f726167653a206e6f7420616e206f776e657200000000000000000060448201526064015b60405180910390fd5b507fb06b901cf30d9e865c5d7b26a442944f8bd0a60b67dd8dda8d1699157a5f493e80546001600160a01b0319166001600160a01b0392909216919091179055565b60007fb06b901cf30d9e865c5d7b26a442944f8bd0a60b67dd8dda8d1699157a5f493e61046b565b6000602a82116105b15760405162461bcd60e51b815260206004820181905260248201527f427974657348656c7065723a20696e76616c69642070617468206c656e67746860448201526064016104ec565b6105f083838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250610844915050565b9392505050565b604051636eb1769f60e11b81523060048201526001600160a01b03828116602483015283169063dd62ed3e9060440160206040518083038186803b15801561063e57600080fd5b505afa158015610652573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067691906109df565b6106ff5760405163095ea7b360e01b81526001600160a01b038281166004830152600019602483015283169063095ea7b390604401602060405180830381600087803b1580156106c557600080fd5b505af11580156106d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fd91906109f8565b505b5050565b60006001600160a01b0382166001141561071e575030919050565b6001600160a01b038216600214156107a757306001600160a01b03166346b3353b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561076957600080fd5b505afa15801561077d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a19190610a15565b92915050565b5090565b6000602a82116107fd5760405162461bcd60e51b815260206004820181905260248201527f427974657348656c7065723a20696e76616c69642070617468206c656e67746860448201526064016104ec565b6105f083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610844925060149150869050610a32565b016020015160601c90565b801515811461085d57600080fd5b50565b6001600160a01b038116811461085d57600080fd5b60008060008060008060a0878903121561088e57600080fd5b86356108998161084f565b955060208701356108a981610860565b94506040870135935060608701359250608087013567ffffffffffffffff808211156108d457600080fd5b818901915089601f8301126108e857600080fd5b8135818111156108f757600080fd5b8a602082850101111561090957600080fd5b6020830194508093505050509295509295509295565b60006020828403121561093157600080fd5b81356105f081610860565b6000815160a0845280518060a086015260005b8181101561096c57602081840181015160c088840101520161094f565b8181111561097e57600060c083880101525b506020840151915061099b60208601836001600160a01b03169052565b6040848101519086015260608085015190860152608093840151938501939093525050601f01601f19160160c00190565b6020815260006105f0602083018461093c565b6000602082840312156109f157600080fd5b5051919050565b600060208284031215610a0a57600080fd5b81516105f08161084f565b600060208284031215610a2757600080fd5b81516105f081610860565b600082821015610a5257634e487b7160e01b600052601160045260246000fd5b50039056fea2646970667358221220e1e2375a55c736372b05baa760dcfb214164da086a6d370d27ce3fb3dbd7235364736f6c63430008090033";

type UniswapV3RouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3RouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3Router__factory extends ContractFactory {
  constructor(...args: UniswapV3RouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV3Router";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3Router> {
    return super.deploy(overrides || {}) as Promise<UniswapV3Router>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UniswapV3Router {
    return super.attach(address) as UniswapV3Router;
  }
  override connect(signer: Signer): UniswapV3Router__factory {
    return super.connect(signer) as UniswapV3Router__factory;
  }
  static readonly contractName: "UniswapV3Router";

  public readonly contractName: "UniswapV3Router";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3RouterInterface {
    return new utils.Interface(_abi) as UniswapV3RouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3Router {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3Router;
  }
}
