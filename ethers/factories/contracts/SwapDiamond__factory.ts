/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SwapDiamond,
  SwapDiamondInterface,
} from "../../contracts/SwapDiamond";

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "DIAMOND_STORAGE_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNABLE_DIAMOND_STORAGE_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SWAP_DIAMOND_STORAGE_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet_",
        type: "address",
      },
      {
        internalType: "bytes4[]",
        name: "selectors_",
        type: "bytes4[]",
      },
    ],
    name: "addFacet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet_",
        type: "address",
      },
      {
        internalType: "bytes4[]",
        name: "selectors_",
        type: "bytes4[]",
      },
      {
        internalType: "enum SwapDiamondStorage.SelectorType[]",
        name: "types_",
        type: "uint8[]",
      },
    ],
    name: "addFacet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector_",
        type: "bytes4",
      },
    ],
    name: "getFacetBySelector",
    outputs: [
      {
        internalType: "address",
        name: "facet_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet_",
        type: "address",
      },
    ],
    name: "getFacetSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "selectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFacets",
    outputs: [
      {
        internalType: "address[]",
        name: "facets_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector_",
        type: "bytes4",
      },
    ],
    name: "getSelectorType",
    outputs: [
      {
        internalType: "enum SwapDiamondStorage.SelectorType",
        name: "selectorType_",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet_",
        type: "address",
      },
      {
        internalType: "bytes4[]",
        name: "selectors_",
        type: "bytes4[]",
      },
    ],
    name: "removeFacet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet_",
        type: "address",
      },
      {
        internalType: "bytes4[]",
        name: "fromSelectors_",
        type: "bytes4[]",
      },
      {
        internalType: "bytes4[]",
        name: "toSelectors_",
        type: "bytes4[]",
      },
      {
        internalType: "enum SwapDiamondStorage.SelectorType[]",
        name: "toTypes_",
        type: "uint8[]",
      },
    ],
    name: "updateFacet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet_",
        type: "address",
      },
      {
        internalType: "bytes4[]",
        name: "fromSelectors_",
        type: "bytes4[]",
      },
      {
        internalType: "bytes4[]",
        name: "toSelectors_",
        type: "bytes4[]",
      },
    ],
    name: "updateFacet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b610144565b6000610041600080516020620016fd833981519152546001600160a01b031690565b90506001600160a01b038116158061006157506001600160a01b03811633145b6100b25760405162461bcd60e51b815260206004820152601760248201527f4f4453746f726167653a206e6f7420616e206f776e657200000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166101135760405162461bcd60e51b815260206004820152602260248201527f4f776e61626c654469616d6f6e643a207a65726f2061646472657373206f776e60448201526132b960f11b60648201526084016100a9565b50600080516020620016fd83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6115a980620001546000396000f3fe6080604052600436106100e15760003560e01c8063ad5403eb1161007f578063e3e077ad11610059578063e3e077ad1461034d578063e828c51f14610381578063f2fde38b146103a3578063fe00955e146103c3576100e8565b8063ad5403eb146102b9578063c8ae30fd1461030d578063cf380c861461032d576100e8565b8063662ea47d116100bb578063662ea47d146102045780638da5cb5b1461022f5780638ea0b2481461025c578063aaadd37714610289576100e8565b806301aa2450146101a2578063218bc10a146101c45780635547dad6146101e4576100e8565b366100e857005b60006100ff6000356001600160e01b0319166103de565b90506001600160a01b0381166101685760405162461bcd60e51b815260206004820152602360248201527f4469616d6f6e643a2073656c6563746f72206973206e6f7420726567697374656044820152621c995960ea1b60648201526084015b60405180910390fd5b61017e816000356001600160e01b031916610410565b3660008037600080366000845af43d6000803e80801561019d573d6000f35b3d6000fd5b3480156101ae57600080fd5b506101c26101bd36600461118b565b61049f565b005b3480156101d057600080fd5b506101c26101df36600461122b565b6104c7565b3480156101f057600080fd5b506101c26101ff36600461129f565b6104ed565b34801561021057600080fd5b50610219610502565b60405161022691906112ed565b60405180910390f35b34801561023b57600080fd5b50610244610532565b6040516001600160a01b039091168152602001610226565b34801561026857600080fd5b5061027c61027736600461133a565b610560565b6040516102269190611355565b34801561029557600080fd5b506102ab60008051602061155483398151915281565b604051908152602001610226565b3480156102c557600080fd5b506103006102d4366004611397565b6001600160e01b0319166000908152600080516020611554833981519152602052604090205460ff1690565b60405161022691906113c8565b34801561031957600080fd5b506101c26103283660046113f0565b610641565b34801561033957600080fd5b506101c261034836600461129f565b61065c565b34801561035957600080fd5b506102ab7f57c74130ec72d1a7d7ef7def56151cb9c46dfc5ebcd11c0ed0e3be53656c9a6581565b34801561038d57600080fd5b506102ab60008051602061153483398151915281565b3480156103af57600080fd5b506101c26103be36600461133a565b610671565b3480156103cf57600080fd5b506102446103de366004611397565b6001600160e01b031916600090815260008051602061153483398151915260205260409020546001600160a01b031690565b6001600160e01b031981166000908152600080516020611554833981519152602052604090205460019060ff16600281111561044e5761044e6113b2565b1461049b5760405162461bcd60e51b815260206004820181905260248201527f537761704469616d6f6e643a2077726f6e672073656c6563746f722074797065604482015260640161015f565b5050565b6104aa85858561075a565b6104b58460006107ab565b6104c0838383610831565b5050505050565b6104d283838361075a565b6104dd8260006107ab565b6104e88160016107ab565b505050565b6104f7828261092d565b61049b8160016107ab565b606061052d7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e61097d565b905090565b7f57c74130ec72d1a7d7ef7def56151cb9c46dfc5ebcd11c0ed0e3be53656c9a65546001600160a01b031690565b6001600160a01b03811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d602052604090206060906105a381610991565b67ffffffffffffffff8111156105bb576105bb61106f565b6040519080825280602002602001820160405280156105e4578160200160208202803683370190505b50915060005b825181101561063a576105fd82826109a1565b83828151811061060f5761060f611467565b6001600160e01b0319909216602092830291909101909101528061063281611493565b9150506105ea565b5050919050565b61064b848461092d565b610656838383610831565b50505050565b61066682826109ad565b61049b8160006107ab565b600061067b610532565b90506001600160a01b038116158061069b57506001600160a01b03811633145b6106b75760405162461bcd60e51b815260040161015f906114ae565b6001600160a01b0382166107185760405162461bcd60e51b815260206004820152602260248201527f4f776e61626c654469616d6f6e643a207a65726f2061646472657373206f776e60448201526132b960f11b606482015260840161015f565b507f57c74130ec72d1a7d7ef7def56151cb9c46dfc5ebcd11c0ed0e3be53656c9a6580546001600160a01b0319166001600160a01b0392909216919091179055565b6000610764610532565b90506001600160a01b038116158061078457506001600160a01b03811633145b6107a05760405162461bcd60e51b815260040161015f906114ae565b6106568484846109fd565b60005b82518110156104e8578160008051602061155483398151915260000160008584815181106107de576107de611467565b6020908102919091018101516001600160e01b0319168252810191909152604001600020805460ff1916600183600281111561081c5761081c6113b2565b021790555061082a81611493565b90506107ae565b825181146108815760405162461bcd60e51b815260206004820152601d60248201527f537761704469616d6f6e643a206c656e67746873206d69736d61746368000000604482015260640161015f565b60005b83518110156106565782828281811061089f5761089f611467565b90506020020160208101906108b491906114e5565b60008051602061155483398151915260000160008684815181106108da576108da611467565b6020908102919091018101516001600160e01b0319168252810191909152604001600020805460ff19166001836002811115610918576109186113b2565b021790555061092681611493565b9050610884565b6000610937610532565b90506001600160a01b038116158061095757506001600160a01b03811633145b6109735760405162461bcd60e51b815260040161015f906114ae565b6104e88383610a03565b6060600061098a83610c38565b9392505050565b600061099b825490565b92915050565b600061098a8383610c94565b60006109b7610532565b90506001600160a01b03811615806109d757506001600160a01b03811633145b6109f35760405162461bcd60e51b815260040161015f906114ae565b6104e88383610cbe565b6109f383825b6001600160a01b0382163b610a5a5760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a206661636574206973206e6f74206120636f6e7472616374604482015260640161015f565b6000815111610aab5760405162461bcd60e51b815260206004820152601e60248201527f4469616d6f6e643a206e6f2073656c6563746f72732070726f76696465640000604482015260640161015f565b60008051602061153483398151915260005b8251811015610c2a5760006001600160a01b0316826000016000858481518110610ae957610ae9611467565b6020908102919091018101516001600160e01b0319168252810191909152604001600020546001600160a01b031614610b645760405162461bcd60e51b815260206004820152601f60248201527f4469616d6f6e643a2073656c6563746f7220616c726561647920616464656400604482015260640161015f565b83826000016000858481518110610b7d57610b7d611467565b60200260200101516001600160e01b0319166001600160e01b031916815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610c17838281518110610be057610be0611467565b6020908102919091018101516001600160a01b0387166000908152600186019092526040909120906001600160e01b031916610ecf565b5080610c2281611493565b915050610abd565b506106566002820184610edb565b606081600001805480602002602001604051908101604052809291908181526020018280548015610c8857602002820191906000526020600020905b815481526020019060010190808311610c74575b50505050509050919050565b6000826000018281548110610cab57610cab611467565b9060005260206000200154905092915050565b6000815111610d0f5760405162461bcd60e51b815260206004820152601e60248201527f4469616d6f6e643a206e6f2073656c6563746f72732070726f76696465640000604482015260640161015f565b60008051602061153483398151915260005b8251811015610e9a57836001600160a01b0316826000016000858481518110610d4c57610d4c611467565b6020908102919091018101516001600160e01b0319168252810191909152604001600020546001600160a01b031614610dd35760405162461bcd60e51b8152602060048201526024808201527f4469616d6f6e643a2073656c6563746f722066726f6d20616e6f7468657220666044820152631858d95d60e21b606482015260840161015f565b6000826000016000858481518110610ded57610ded611467565b60200260200101516001600160e01b0319166001600160e01b031916815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610e87838281518110610e5057610e50611467565b6020908102919091018101516001600160a01b0387166000908152600186019092526040909120906001600160e01b031916610ef0565b5080610e9281611493565b915050610d21565b506001600160a01b03831660009081526001820160205260409020610ebe90610991565b6104e8576106566002820184610efc565b600061098a8383610f11565b600061098a836001600160a01b038416610f11565b600061098a8383610f60565b600061098a836001600160a01b038416610f60565b6000818152600183016020526040812054610f585750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561099b565b50600061099b565b60008181526001830160205260408120548015611049576000610f84600183611506565b8554909150600090610f9890600190611506565b9050818114610ffd576000866000018281548110610fb857610fb8611467565b9060005260206000200154905080876000018481548110610fdb57610fdb611467565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061100e5761100e61151d565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061099b565b600091505061099b565b80356001600160a01b038116811461106a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b80356001600160e01b03198116811461106a57600080fd5b600082601f8301126110ae57600080fd5b8135602067ffffffffffffffff808311156110cb576110cb61106f565b8260051b604051601f19603f830116810181811084821117156110f0576110f061106f565b60405293845285810183019383810192508785111561110e57600080fd5b83870191505b848210156111345761112582611085565b83529183019190830190611114565b979650505050505050565b60008083601f84011261115157600080fd5b50813567ffffffffffffffff81111561116957600080fd5b6020830191508360208260051b850101111561118457600080fd5b9250929050565b6000806000806000608086880312156111a357600080fd5b6111ac86611053565b9450602086013567ffffffffffffffff808211156111c957600080fd5b6111d589838a0161109d565b955060408801359150808211156111eb57600080fd5b6111f789838a0161109d565b9450606088013591508082111561120d57600080fd5b5061121a8882890161113f565b969995985093965092949392505050565b60008060006060848603121561124057600080fd5b61124984611053565b9250602084013567ffffffffffffffff8082111561126657600080fd5b6112728783880161109d565b9350604086013591508082111561128857600080fd5b506112958682870161109d565b9150509250925092565b600080604083850312156112b257600080fd5b6112bb83611053565b9150602083013567ffffffffffffffff8111156112d757600080fd5b6112e38582860161109d565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561132e5783516001600160a01b031683529284019291840191600101611309565b50909695505050505050565b60006020828403121561134c57600080fd5b61098a82611053565b6020808252825182820181905260009190848201906040850190845b8181101561132e5783516001600160e01b03191683529284019291840191600101611371565b6000602082840312156113a957600080fd5b61098a82611085565b634e487b7160e01b600052602160045260246000fd5b60208101600383106113ea57634e487b7160e01b600052602160045260246000fd5b91905290565b6000806000806060858703121561140657600080fd5b61140f85611053565b9350602085013567ffffffffffffffff8082111561142c57600080fd5b6114388883890161109d565b9450604087013591508082111561144e57600080fd5b5061145b8782880161113f565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156114a7576114a761147d565b5060010190565b60208082526017908201527f4f4453746f726167653a206e6f7420616e206f776e6572000000000000000000604082015260600190565b6000602082840312156114f757600080fd5b81356003811061098a57600080fd5b6000828210156115185761151861147d565b500390565b634e487b7160e01b600052603160045260246000fdfec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131cd9994a2d0824ef735b1d5a0b20e0f1fb2c24accd777b363dcae017c3d893ad9ea264697066735822122056d74b63c8c4672f980df4884626dac95b6ae76ce63625ebf323e4496502822b64736f6c6343000809003357c74130ec72d1a7d7ef7def56151cb9c46dfc5ebcd11c0ed0e3be53656c9a65";

type SwapDiamondConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapDiamondConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapDiamond__factory extends ContractFactory {
  constructor(...args: SwapDiamondConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SwapDiamond";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapDiamond> {
    return super.deploy(overrides || {}) as Promise<SwapDiamond>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SwapDiamond {
    return super.attach(address) as SwapDiamond;
  }
  override connect(signer: Signer): SwapDiamond__factory {
    return super.connect(signer) as SwapDiamond__factory;
  }
  static readonly contractName: "SwapDiamond";

  public readonly contractName: "SwapDiamond";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapDiamondInterface {
    return new utils.Interface(_abi) as SwapDiamondInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapDiamond {
    return new Contract(address, _abi, signerOrProvider) as SwapDiamond;
  }
}
