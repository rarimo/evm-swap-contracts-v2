/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MasterRouterStorage,
  MasterRouterStorageInterface,
} from "../../../contracts/master-facet/MasterRouterStorage";

const _abi = [
  {
    inputs: [],
    name: "MASTER_ROUTER_STORAGE_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCallerAddress",
    outputs: [
      {
        internalType: "address",
        name: "caller_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060df8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806346b3353b146037578063660fd3b0146076575b600080fd5b7f444ab9770a554b6ea261614928f25db0616ffe55682777211d40e847b886eb45546040516001600160a01b0390911681526020015b60405180910390f35b609c7f444ab9770a554b6ea261614928f25db0616ffe55682777211d40e847b886eb4581565b604051908152602001606d56fea2646970667358221220e631f19e3edd7b3049485c3d6fd593c2cce0e65f4c86f7c5b538835752294f3064736f6c63430008090033";

type MasterRouterStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterRouterStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterRouterStorage__factory extends ContractFactory {
  constructor(...args: MasterRouterStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MasterRouterStorage";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MasterRouterStorage> {
    return super.deploy(overrides || {}) as Promise<MasterRouterStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MasterRouterStorage {
    return super.attach(address) as MasterRouterStorage;
  }
  override connect(signer: Signer): MasterRouterStorage__factory {
    return super.connect(signer) as MasterRouterStorage__factory;
  }
  static readonly contractName: "MasterRouterStorage";

  public readonly contractName: "MasterRouterStorage";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterRouterStorageInterface {
    return new utils.Interface(_abi) as MasterRouterStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterRouterStorage {
    return new Contract(address, _abi, signerOrProvider) as MasterRouterStorage;
  }
}
