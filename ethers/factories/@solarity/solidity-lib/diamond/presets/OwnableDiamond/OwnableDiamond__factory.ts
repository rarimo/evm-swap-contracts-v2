/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  OwnableDiamond,
  OwnableDiamondInterface,
} from "../../../../../../@solarity/solidity-lib/diamond/presets/OwnableDiamond/OwnableDiamond";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "DIAMOND_STORAGE_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNABLE_DIAMOND_STORAGE_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet_",
        type: "address",
      },
      {
        internalType: "bytes4[]",
        name: "selectors_",
        type: "bytes4[]",
      },
    ],
    name: "addFacet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector_",
        type: "bytes4",
      },
    ],
    name: "getFacetBySelector",
    outputs: [
      {
        internalType: "address",
        name: "facet_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet_",
        type: "address",
      },
    ],
    name: "getFacetSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "selectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFacets",
    outputs: [
      {
        internalType: "address[]",
        name: "facets_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet_",
        type: "address",
      },
      {
        internalType: "bytes4[]",
        name: "selectors_",
        type: "bytes4[]",
      },
    ],
    name: "removeFacet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet_",
        type: "address",
      },
      {
        internalType: "bytes4[]",
        name: "fromSelectors_",
        type: "bytes4[]",
      },
      {
        internalType: "bytes4[]",
        name: "toSelectors_",
        type: "bytes4[]",
      },
    ],
    name: "updateFacet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type OwnableDiamondConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnableDiamondConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnableDiamond__factory extends ContractFactory {
  constructor(...args: OwnableDiamondConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OwnableDiamond";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OwnableDiamond> {
    return super.deploy(overrides || {}) as Promise<OwnableDiamond>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OwnableDiamond {
    return super.attach(address) as OwnableDiamond;
  }
  override connect(signer: Signer): OwnableDiamond__factory {
    return super.connect(signer) as OwnableDiamond__factory;
  }
  static readonly contractName: "OwnableDiamond";

  public readonly contractName: "OwnableDiamond";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnableDiamondInterface {
    return new utils.Interface(_abi) as OwnableDiamondInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnableDiamond {
    return new Contract(address, _abi, signerOrProvider) as OwnableDiamond;
  }
}
