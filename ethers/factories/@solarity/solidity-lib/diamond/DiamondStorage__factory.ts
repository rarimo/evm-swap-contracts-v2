/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  DiamondStorage,
  DiamondStorageInterface,
} from "../../../../@solarity/solidity-lib/diamond/DiamondStorage";

const _abi = [
  {
    inputs: [],
    name: "DIAMOND_STORAGE_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector_",
        type: "bytes4",
      },
    ],
    name: "getFacetBySelector",
    outputs: [
      {
        internalType: "address",
        name: "facet_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet_",
        type: "address",
      },
    ],
    name: "getFacetSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "selectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFacets",
    outputs: [
      {
        internalType: "address[]",
        name: "facets_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class DiamondStorage__factory {
  static readonly abi = _abi;
  static createInterface(): DiamondStorageInterface {
    return new utils.Interface(_abi) as DiamondStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondStorage {
    return new Contract(address, _abi, signerOrProvider) as DiamondStorage;
  }
}
